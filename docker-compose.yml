version: '3.2'

services:

  #nginx:
    #build: ./src/nginx
    #links:
      #- inventory-service:inventory-service
      #- billing-service:billing-service
    #ports:
      #- "80:80"

  inventory-service:
    build:
      context: ./src/InventoryService
    container_name: inventory-service
    ports:
      - "8000:80"
    depends_on:
      - mysql
    networks:
      - app-net

  billing-service:
    build:
      context: ./src/BillingService
    container_name: billing-service
    ports:
      - "8001:80"
    depends_on:
      - redis
    networks:
      - app-net

  order-service:
    build:
      context: ./src/OrderService
    container_name: order-service
    ports:
      - "8002:80"
    environment: 
      - MESSAGE_QUEUE_URL=nats://message-queue:4222
    depends_on:
      - message-queue
    networks:
      - app-net

  order-processor-service:
    build:
      context: ./src/OrderProcessorService
    container_name: order-processor-service
    environment: 
      - MESSAGE_QUEUE_URL=nats://message-queue:4222
    depends_on:
      - message-queue
    networks:
      - app-net

  message-queue:
    image: nats
    container_name: message-queue
    ports:
      - "4222:4222"
    networks:
      - app-net

  mysql:
    image: mysql
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: mypassword
    networks:
      - app-net

  redis:
    #image: redis:3.2.100-nanoserver
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-net
      
networks:
  app-net:
    driver: bridge
